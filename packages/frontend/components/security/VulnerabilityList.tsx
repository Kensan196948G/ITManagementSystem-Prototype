import { useState } from "react";
import { AlertTriangle, Search, Filter, MoreHorizontal, ExternalLink } from "lucide-react";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "../ui/table";
import { Badge } from "../ui/badge";
import { Button } from "../ui/button";
import { Input } from "../ui/input";
import { 
  DropdownMenu, 
  DropdownMenuContent, 
  DropdownMenuItem, 
  DropdownMenuLabel, 
  DropdownMenuSeparator, 
  DropdownMenuTrigger 
} from "../ui/dropdown-menu";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../ui/select";

// 脆弱性のサンプルデータ
const vulnerabilities = [
  {
    id: "VUL-001",
    cve: "CVE-2023-1234",
    title: "SQL Server Remote Code Execution",
    severity: "critical",
    status: "未対応",
    affectedSystem: "MS-SQL-01",
    discoveredAt: "2025-05-01T09:30:00",
    description: "Microsoft SQL Serverにおけるリモートでのコード実行を可能にする脆弱性。認証なしで任意のコードを実行される可能性があります。"
  },
  {
    id: "VUL-002",
    cve: "CVE-2023-5678",
    title: "Microsoft Exchange Server 特権昇格",
    severity: "critical",
    status: "未対応",
    affectedSystem: "Exchange Online",
    discoveredAt: "2025-05-03T14:15:00",
    description: "Microsoft Exchange Serverにおける特権昇格の脆弱性。攻撃者が管理者権限を取得する可能性があります。"
  },
  {
    id: "VUL-003",
    cve: "CVE-2023-9012",
    title: "Windows Server SMB プロトコル DoS",
    severity: "high",
    status: "対応中",
    affectedSystem: "WEB-01, APP-01",
    discoveredAt: "2025-05-05T11:20:00",
    description: "Windows Server SMBプロトコルにおけるサービス拒否攻撃の脆弱性。リモートからシステムに過大な負荷をかけることが可能です。"
  },
  {
    id: "VUL-004",
    cve: "CVE-2023-3456",
    title: "Apache Log4j 情報漏洩",
    severity: "high",
    status: "修正済み",
    affectedSystem: "APP-01",
    discoveredAt: "2025-04-28T10:45:00",
    description: "Apache Log4jライブラリにおける情報漏洩の脆弱性。ログに記録された機密情報が攻撃者に漏洩する可能性があります。"
  },
  {
    id: "VUL-005",
    cve: "CVE-2023-7890",
    title: "Microsoft Teams XSS脆弱性",
    severity: "medium",
    status: "未対応",
    affectedSystem: "Microsoft Teams",
    discoveredAt: "2025-05-06T09:30:00",
    description: "Microsoft Teamsにおけるクロスサイトスクリプティング脆弱性。チャットメッセージを通じて悪意のあるスクリプトが実行される可能性があります。"
  },
  {
    id: "VUL-006",
    cve: "CVE-2023-2345",
    title: "SharePoint 認証バイパス",
    severity: "high",
    status: "対応中",
    affectedSystem: "SharePoint",
    discoveredAt: "2025-05-04T16:20:00",
    description: "SharePointにおける認証バイパスの脆弱性。特定の条件下で認証をバイパスしコンテンツにアクセスされる可能性があります。"
  },
  {
    id: "VUL-007",
    cve: "CVE-2023-6789",
    title: "Cisco スイッチファームウェア脆弱性",
    severity: "medium",
    status: "未対応",
    affectedSystem: "CORE-SW-01",
    discoveredAt: "2025-05-07T13:10:00",
    description: "Ciscoスイッチのファームウェアにおける脆弱性。管理インターフェースを通じて不正アクセスされる可能性があります。"
  },
  {
    id: "VUL-008",
    cve: "CVE-2023-8901",
    title: "Windows OS権限昇格",
    severity: "medium",
    status: "未対応",
    affectedSystem: "MS-SQL-01, WEB-01, APP-01",
    discoveredAt: "2025-05-08T10:30:00",
    description: "Windows OSにおける権限昇格の脆弱性。ローカルユーザーが管理者権限を取得することが可能です。"
  },
  {
    id: "VUL-009",
    cve: "CVE-2023-4567",
    title: "SAN管理インターフェース認証不備",
    severity: "high",
    status: "対応中",
    affectedSystem: "SAN-01",
    discoveredAt: "2025-05-02T15:40:00",
    description: "ストレージエリアネットワークの管理インターフェースにおける認証不備。デフォルト認証情報でアクセスされる可能性があります。"
  },
  {
    id: "VUL-010",
    cve: "CVE-2023-5432",
    title: "DeskNet'sNeo XXE脆弱性",
    severity: "low",
    status: "修正済み",
    affectedSystem: "DeskNet'sNeo",
    discoveredAt: "2025-04-25T09:15:00",
    description: "DeskNet'sNeoにおけるXXE脆弱性。XML外部エンティティを通じてサーバー上のファイルが読み取られる可能性があります。"
  }
];

// 日付フォーマット用ユーティリティ関数
function formatDate(dateString: string) {
  const date = new Date(dateString);
  return new Intl.DateTimeFormat('ja-JP', {
    year: 'numeric',
    month: 'numeric',
    day: 'numeric'
  }).format(date);
}

export function VulnerabilityList() {
  const [search, setSearch] = useState("");
  const [selectedSeverity, setSelectedSeverity] = useState("all");
  const [selectedStatus, setSelectedStatus] = useState("all");
  
  const filteredVulnerabilities = vulnerabilities.filter(vulnerability => {
    // 検索フィルタリング
    const searchMatch = vulnerability.title.toLowerCase().includes(search.toLowerCase()) ||
                      vulnerability.cve.toLowerCase().includes(search.toLowerCase()) ||
                      vulnerability.affectedSystem.toLowerCase().includes(search.toLowerCase());
    
    // 重要度フィルタリング
    const severityMatch = selectedSeverity === "all" || vulnerability.severity === selectedSeverity;
    
    // ステータスフィルタリング
    const statusMatch = selectedStatus === "all" || vulnerability.status === selectedStatus;
    
    return searchMatch && severityMatch && statusMatch;
  });
  
  return (
    <div className="space-y-4">
      <div className="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
        <div className="flex items-center gap-2">
          <div className="relative">
            <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
            <Input
              placeholder="脆弱性を検索..."
              value={search}
              onChange={(e) => setSearch(e.target.value)}
              className="w-full pl-8 sm:w-[300px]"
            />
          </div>
          <Button variant="outline" size="icon">
            <Filter className="h-4 w-4" />
            <span className="sr-only">フィルター</span>
          </Button>
        </div>
        <div className="flex flex-wrap items-center gap-2">
          <Select defaultValue="all" value={selectedSeverity} onValueChange={setSelectedSeverity}>
            <SelectTrigger className="w-[150px]">
              <SelectValue placeholder="重要度" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">すべての重要度</SelectItem>
              <SelectItem value="critical">重大</SelectItem>
              <SelectItem value="high">高</SelectItem>
              <SelectItem value="medium">中</SelectItem>
              <SelectItem value="low">低</SelectItem>
            </SelectContent>
          </Select>
          <Select defaultValue="all" value={selectedStatus} onValueChange={setSelectedStatus}>
            <SelectTrigger className="w-[150px]">
              <SelectValue placeholder="ステータス" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">すべてのステータス</SelectItem>
              <SelectItem value="未対応">未対応</SelectItem>
              <SelectItem value="対応中">対応中</SelectItem>
              <SelectItem value="修正済み">修正済み</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>
      
      <div className="rounded-md border">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>CVE</TableHead>
              <TableHead className="w-[300px]">タイトル</TableHead>
              <TableHead>重要度</TableHead>
              <TableHead>ステータス</TableHead>
              <TableHead>影響システム</TableHead>
              <TableHead>検出日</TableHead>
              <TableHead className="w-[70px]"></TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {filteredVulnerabilities.map((vulnerability) => (
              <TableRow key={vulnerability.id}>
                <TableCell className="font-mono">{vulnerability.cve}</TableCell>
                <TableCell className="font-medium">{vulnerability.title}</TableCell>
                <TableCell>
                  <SeverityBadge severity={vulnerability.severity} />
                </TableCell>
                <TableCell>
                  <StatusBadge status={vulnerability.status} />
                </TableCell>
                <TableCell>{vulnerability.affectedSystem}</TableCell>
                <TableCell>{formatDate(vulnerability.discoveredAt)}</TableCell>
                <TableCell>
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button variant="ghost" size="icon">
                        <MoreHorizontal className="h-4 w-4" />
                        <span className="sr-only">操作</span>
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end">
                      <DropdownMenuLabel>操作</DropdownMenuLabel>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem>詳細を表示</DropdownMenuItem>
                      <DropdownMenuItem>
                        <ExternalLink className="mr-2 h-4 w-4" />
                        CVE詳細を開く
                      </DropdownMenuItem>
                      <DropdownMenuSeparator />
                      <DropdownMenuItem>対応計画を作成</DropdownMenuItem>
                      <DropdownMenuItem>ステータスを更新</DropdownMenuItem>
                      <DropdownMenuItem>影響分析を実行</DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </div>
    </div>
  );
}

function SeverityBadge({ severity }: { severity: string }) {
  let classes = "";
  
  switch (severity) {
    case "critical":
      classes = "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200";
      break;
    case "high":
      classes = "bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200";
      break;
    case "medium":
      classes = "bg-amber-100 text-amber-800 dark:bg-amber-900 dark:text-amber-200";
      break;
    case "low":
      classes = "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200";
      break;
    default:
      classes = "bg-secondary text-secondary-foreground";
  }
  
  const labels = {
    critical: "重大",
    high: "高",
    medium: "中",
    low: "低"
  };
  
  return <Badge variant="outline" className={classes}>{labels[severity as keyof typeof labels]}</Badge>;
}

function StatusBadge({ status }: { status: string }) {
  let classes = "";
  
  switch (status) {
    case "未対応":
      classes = "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200";
      break;
    case "対応中":
      classes = "bg-amber-100 text-amber-800 dark:bg-amber-900 dark:text-amber-200";
      break;
    case "修正済み":
      classes = "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200";
      break;
    default:
      classes = "bg-secondary text-secondary-foreground";
  }
  
  return <Badge variant="outline" className={classes}>{status}</Badge>;
}