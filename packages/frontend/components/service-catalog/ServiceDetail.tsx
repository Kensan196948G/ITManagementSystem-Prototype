import { useState } from "react";
import { 
  AlertCircle, 
  ArrowLeft, 
  Calendar, 
  Check, 
  CheckCircle2, 
  Clock, 
  HelpCircle, 
  History, 
  Info, 
  LineChart, 
  Plus, 
  Star, 
  ThumbsUp, 
  Users 
} from "lucide-react";
import { Button } from "../ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "../ui/card";
import { Separator } from "../ui/separator";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "../ui/tabs";
import { Badge } from "../ui/badge";
import { Progress } from "../ui/progress";
import { toast } from "sonner";

// „Çµ„Éº„Éì„ÇπË©≥Á¥∞„ÅÆ„Çµ„É≥„Éó„É´„Éá„Éº„Çø
const serviceDetail = {
  id: "SVC-001",
  name: "Microsoft 365 E3„É©„Ç§„Çª„É≥„Çπ",
  description: "Microsoft 365 E3„É©„Ç§„Çª„É≥„Çπ„ÅÆÂâ≤„ÇäÂΩì„Å¶„ÄÇWord„ÄÅExcel„ÄÅPowerPoint„ÄÅTeams„ÄÅExchange„ÄÅSharePoint„ÄÅOneDrive„Å™„Å©„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å®„Çµ„Éº„Éì„Çπ„ÅåÂê´„Åæ„Çå„Åæ„Åô„ÄÇ",
  longDescription: `
  # Microsoft 365 E3„É©„Ç§„Çª„É≥„Çπ

  Microsoft 365 E3„É©„Ç§„Çª„É≥„Çπ„ÅØ„ÄÅÁîüÁî£ÊÄßÂêë‰∏ä„Å®„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥„ÅÆ„Åü„ÇÅ„ÅÆÂåÖÊã¨ÁöÑ„Å™„ÇØ„É©„Ç¶„Éâ„Çµ„Éº„Éì„Çπ„Å®„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Çπ„Ç§„Éº„Éà„Åß„Åô„ÄÇ„Åì„ÅÆ„É©„Ç§„Çª„É≥„Çπ„Å´„Çà„Çä„ÄÅ„É¶„Éº„Ç∂„Éº„ÅØ‰ª•‰∏ã„ÅÆ„Çµ„Éº„Éì„Çπ„ÇÑ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´„Ç¢„ÇØ„Çª„Çπ„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ

  ## Âê´„Åæ„Çå„Çã„Çµ„Éº„Éì„Çπ

  ### ÁîüÁî£ÊÄß„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥
  - Microsoft WordÔºöÊñáÊõ∏‰ΩúÊàê„Å®Á∑®ÈõÜ
  - Microsoft ExcelÔºö„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà
  - Microsoft PowerPointÔºö„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥
  - Microsoft OutlookÔºö„É°„Éº„É´„Éª„Ç´„É¨„É≥„ÉÄ„Éº
  - Microsoft OneNoteÔºö„Éé„Éº„ÉàÂèñ„Çä

  ### „Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥„Å®„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥
  - Microsoft TeamsÔºö„ÉÅ„É£„ÉÉ„Éà„ÄÅ„Ç™„É≥„É©„Ç§„É≥‰ºöË≠∞„ÄÅ„Éï„Ç°„Ç§„É´ÂÖ±Êúâ
  - Exchange OnlineÔºö„Éì„Ç∏„Éç„Çπ„É°„Éº„É´„Çµ„Éº„Éì„Çπ
  - SharePoint OnlineÔºö„ÉÅ„Éº„É†Èñì„ÅÆ„Éï„Ç°„Ç§„É´ÂÖ±Êúâ„Å®„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥
  - OneDrive for BusinessÔºö1TB„ÅÆ„ÇØ„É©„Ç¶„Éâ„Çπ„Éà„É¨„Éº„Ç∏

  ### „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Å®„Ç≥„É≥„Éó„É©„Ç§„Ç¢„É≥„Çπ
  - Â§öË¶ÅÁ¥†Ë™çË®º
  - „Éá„Éº„ÇøÊêçÂ§±Èò≤Ê≠¢
  - ÊÉÖÂ†±‰øùË≠∑
  - „Ç¢„Éº„Ç´„Ç§„ÉñÊ©üËÉΩ

  ## Áî®ÈÄî„Å®Ê¥ªÁî®„Ç∑„Éº„É≥

  - Êó•Â∏∏Ê•≠Âãô„Å´„Åä„Åë„ÇãÊñáÊõ∏‰ΩúÊàê„ÉªÂÖ±Êúâ
  - „ÉÅ„Éº„É†Èñì„ÅÆ„Ç≥„É©„Éú„É¨„Éº„Ç∑„Éß„É≥„Å®„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥
  - „É™„É¢„Éº„Éà„ÉØ„Éº„ÇØ„Å®„É¢„Éê„Ç§„É´„Ç¢„ÇØ„Çª„Çπ
  - ‰ºöË≠∞„ÅÆÈñãÂÇ¨„Å®ÂèÇÂä†
  - Á§æÂÜÖ„Éï„Ç°„Ç§„É´„ÅÆÂÆâÂÖ®„Å™‰øùÂ≠ò„Å®ÂÖ±Êúâ

  ## Áî≥Ë´ãÊôÇ„ÅÆÊ≥®ÊÑè‰∫ãÈ†Ö

  - Áî≥Ë´ã„Å´„ÅØÈÉ®ÈñÄÈï∑„ÅÆÊâøË™ç„ÅåÂøÖË¶Å„Åß„Åô
  - Âà©Áî®ËÄÖ„ÅÆMicrosoft Entra ID„Ç¢„Ç´„Ç¶„É≥„Éà„ÅåÂøÖË¶Å„Åß„Åô
  - „É©„Ç§„Çª„É≥„ÇπÂâ≤„ÇäÂΩì„Å¶Âæå„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂøÖË¶Å„Å™Â†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô
  `,
  category: "software",
  icon: "üñ•Ô∏è",
  fulfillmentTime: "1Âñ∂Ê•≠Êó•",
  approvalRequired: true,
  cost: "¬•2,100 / Êúà",
  rating: 4.7,
  tags: ["Microsoft 365", "„É©„Ç§„Çª„É≥„Çπ", "Office"],
  status: "available",
  sla: {
    fulfillment: "1Âñ∂Ê•≠Êó•‰ª•ÂÜÖ",
    availability: "99.9%",
    performance: {
      target: "99.9%",
      current: 99.95,
      history: [99.92, 99.95, 99.98, 99.9, 99.94, 99.95]
    }
  },
  approvalProcess: [
    "Áî≥Ë´ãËÄÖ„ÅåÂøÖË¶ÅÊÉÖÂ†±„ÇíÂÖ•Âäõ",
    "ÈÉ®ÈñÄÈï∑„Å´„Çà„ÇãÊâøË™ç",
    "ITÈÉ®ÈñÄ„Å´„Çà„ÇãÁ¢∫Ë™ç",
    "„É©„Ç§„Çª„É≥„ÇπÂâ≤„ÇäÂΩì„Å¶„Å®ÈÄöÁü•"
  ],
  requiredInformation: [
    "Âà©Áî®ËÄÖ„ÅÆÊ∞èÂêç",
    "Âà©Áî®ËÄÖ„ÅÆ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ",
    "Âà©Áî®ËÄÖ„ÅÆÈÉ®ÁΩ≤",
    "Âà©Áî®ÁõÆÁöÑ",
    "Ë´ãÊ±ÇÂÖàÈÉ®ÈñÄ„Ç≥„Éº„Éâ"
  ],
  includes: [
    "Word„ÄÅExcel„ÄÅPowerPoint„ÄÅOutlook„Å™„Å©„ÅÆ„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥",
    "Exchange OnlineÔºà„É°„Éº„É´Ôºâ",
    "SharePoint OnlineÔºà„Éï„Ç°„Ç§„É´ÂÖ±ÊúâÔºâ",
    "Microsoft TeamsÔºà„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥Ôºâ",
    "OneDrive for BusinessÔºà1TB„Çπ„Éà„É¨„Éº„Ç∏Ôºâ"
  ],
  excludes: [
    "Power BI ProÔºàÂà•ÈÄîÁî≥Ë´ã„ÅåÂøÖË¶ÅÔºâ",
    "ÈõªË©±„Ç∑„Çπ„ÉÜ„É†Ê©üËÉΩÔºàTeams PhoneÔºâ",
    "È´òÂ∫¶„Å™ÂàÜÊûêÊ©üËÉΩ",
    "È´òÂ∫¶„Å™„Ç≥„É≥„Éó„É©„Ç§„Ç¢„É≥„ÇπÊ©üËÉΩ"
  ],
  alternatives: [
    { id: "SVC-019", name: "Microsoft 365 E5„É©„Ç§„Çª„É≥„Çπ", description: "È´òÂ∫¶„Å™„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Å®„Ç≥„É≥„Éó„É©„Ç§„Ç¢„É≥„ÇπÊ©üËÉΩ„ÇíÂê´„ÇÄ‰∏ä‰Ωç„É©„Ç§„Çª„É≥„Çπ" },
    { id: "SVC-020", name: "Microsoft 365 Business Basic", description: "Web„Ç¢„Éó„É™„ÅÆ„Åø„ÇíÂê´„ÇÄÂü∫Êú¨„É©„Ç§„Çª„É≥„Çπ" }
  ],
  faqs: [
    {
      question: "Êó¢Â≠ò„ÅÆ„É©„Ç§„Çª„É≥„Çπ„Åã„ÇâE3„Å´„Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„Éâ„Åß„Åç„Åæ„Åô„ÅãÔºü",
      answer: "„ÅØ„ÅÑ„ÄÅÊó¢Â≠ò„ÅÆ„É©„Ç§„Çª„É≥„Çπ„Åã„Çâ„Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„Éâ„ÅåÂèØËÉΩ„Åß„Åô„ÄÇ„Ç¢„ÉÉ„Éó„Ç∞„É¨„Éº„ÉâÁî≥Ë´ã„ÇíË°å„ÅÜ„Å®„ÄÅÁèæÂú®„ÅÆ„É©„Ç§„Çª„É≥„Çπ„ÅåÊñ∞„Åó„ÅÑ„É©„Ç§„Çª„É≥„Çπ„Å´ÁΩÆ„ÅçÊèõ„Åà„Çâ„Çå„Åæ„Åô„ÄÇ"
    },
    {
      question: "„É©„Ç§„Çª„É≥„Çπ„ÅØÂç≥ÊôÇ„Å´ÊúâÂäπÂåñ„Åï„Çå„Åæ„Åô„ÅãÔºü",
      answer: "ÈÄöÂ∏∏„ÄÅÊâøË™çÂæå1Âñ∂Ê•≠Êó•‰ª•ÂÜÖ„Å´ÊúâÂäπÂåñ„Åï„Çå„Åæ„Åô„ÄÇ„Åü„Å†„Åó„ÄÅ„Ç∑„Çπ„ÉÜ„É†„ÅÆÁä∂Ê≥Å„Å´„Çà„Å£„Å¶„ÅØËã•Âπ≤„ÅÆÈÅÖÂª∂„ÅåÁîü„Åò„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ"
    },
    {
      question: "Ë§áÊï∞„ÅÆ„É¶„Éº„Ç∂„Éº„Å´‰∏ÄÊã¨„Åß„É©„Ç§„Çª„É≥„Çπ„ÇíÂâ≤„ÇäÂΩì„Å¶„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åô„ÅãÔºü",
      answer: "„ÅØ„ÅÑ„ÄÅË§áÊï∞„É¶„Éº„Ç∂„ÉºÂêë„Åë„ÅÆ‰∏ÄÊã¨Áî≥Ë´ã„Éï„Ç©„Éº„É†„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ5Âêç‰ª•‰∏ä„ÅÆÁî≥Ë´ã„ÅÆÂ†¥Âêà„ÅØ„Åù„Å°„Çâ„Çí„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑ„ÄÇ"
    }
  ],
  documentation: [
    { name: "Microsoft 365 E3„É¶„Éº„Ç∂„Éº„Ç¨„Ç§„Éâ", url: "#" },
    { name: "ÂàùÊúü„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Ç¨„Ç§„Éâ", url: "#" },
    { name: "„É©„Ç§„Çª„É≥„Çπ„Éù„É™„Ç∑„Éº", url: "#" }
  ],
  stats: {
    totalRequests: 234,
    averageFulfillmentTime: "0.8Âñ∂Ê•≠Êó•",
    satisfactionRate: 96
  },
  relatedServices: [
    { id: "SVC-004", name: "„Éë„Çπ„ÉØ„Éº„Éâ„É™„Çª„ÉÉ„Éà" },
    { id: "SVC-008", name: "„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„Ç§„É≥„Çπ„Éà„Éº„É´" },
    { id: "SVC-012", name: "„ÇØ„É©„Ç¶„Éâ„Çπ„Éà„É¨„Éº„Ç∏ÂÆπÈáèËøΩÂä†" }
  ]
};

// Êó•‰ªò„Éï„Ç©„Éº„Éû„ÉÉ„ÉàÁî®„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞
function formatDate(dateString: string) {
  const date = new Date(dateString);
  return new Intl.DateTimeFormat('ja-JP', {
    year: 'numeric',
    month: 'numeric',
    day: 'numeric'
  }).format(date);
}

interface ServiceDetailProps {
  serviceId: string;
  onBack: () => void;
  onRequestService: () => void;
}

export function ServiceDetail({ 
  serviceId, 
  onBack,
  onRequestService
}: ServiceDetailProps) {
  const [activeTab, setActiveTab] = useState("overview");
  
  // „Çµ„Éº„Éì„Çπ„ÅÆ„ÅäÊ∞ó„Å´ÂÖ•„ÇäËøΩÂä†Âá¶ÁêÜ
  const handleAddToFavorites = () => {
    toast.success("„ÅäÊ∞ó„Å´ÂÖ•„Çä„Å´ËøΩÂä†„Åó„Åæ„Åó„Åü");
  };
  
  // „Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØÈÄÅ‰ø°Âá¶ÁêÜ
  const handleSubmitFeedback = () => {
    toast.success("„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„ÅåÈÄÅ‰ø°„Åï„Çå„Åæ„Åó„Åü");
  };
  
  return (
    <div className="space-y-4">
      <div className="flex items-center gap-2">
        <Button variant="ghost" size="icon" onClick={onBack}>
          <ArrowLeft className="h-4 w-4" />
        </Button>
        <h2>{serviceDetail.name}</h2>
        <ServiceStatusBadge status={serviceDetail.status} />
      </div>
      
      <div className="grid grid-cols-1 gap-4 lg:grid-cols-3">
        <div className="lg:col-span-2">
          <Card>
            <CardHeader className="pb-2">
              <div className="flex justify-between">
                <div className="flex items-center gap-3">
                  <div className="flex h-12 w-12 items-center justify-center rounded-full bg-primary/10 text-2xl">
                    {serviceDetail.icon}
                  </div>
                  <div>
                    <Badge variant="outline" className="mb-1">
                      {serviceDetail.category}
                    </Badge>
                    <CardTitle>{serviceDetail.name}</CardTitle>
                    <CardDescription className="mt-1">{serviceDetail.description}</CardDescription>
                  </div>
                </div>
              </div>
            </CardHeader>
            <CardContent className="pt-4">
              <Tabs defaultValue="overview" value={activeTab} onValueChange={setActiveTab}>
                <TabsList>
                  <TabsTrigger value="overview">Ê¶ÇË¶Å</TabsTrigger>
                  <TabsTrigger value="details">Ë©≥Á¥∞ÊÉÖÂ†±</TabsTrigger>
                  <TabsTrigger value="process">Áî≥Ë´ã„Éó„É≠„Çª„Çπ</TabsTrigger>
                  <TabsTrigger value="faq">FAQ</TabsTrigger>
                </TabsList>
                <TabsContent value="overview" className="space-y-4 pt-4">
                  <div className="prose max-w-none dark:prose-invert">
                    {/* ÂÆüÈöõ„ÅÆ„Ç¢„Éó„É™„Åß„ÅØMarkdown„É¨„É≥„ÉÄ„É©„Éº„Çí‰ΩøÁî® */}
                    <pre className="whitespace-pre-wrap font-sans text-sm">{serviceDetail.longDescription}</pre>
                  </div>
                  
                  <div className="grid grid-cols-1 gap-4 md:grid-cols-2">
                    <div className="rounded-md border p-4">
                      <h3 className="mb-2 text-base font-medium">Âê´„Åæ„Çå„Çã„ÇÇ„ÅÆ</h3>
                      <ul className="space-y-2">
                        {serviceDetail.includes.map((item, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <Check className="mt-0.5 h-4 w-4 text-green-500 flex-shrink-0" />
                            <span className="text-sm">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div className="rounded-md border p-4">
                      <h3 className="mb-2 text-base font-medium">Âê´„Åæ„Çå„Å™„ÅÑ„ÇÇ„ÅÆ</h3>
                      <ul className="space-y-2">
                        {serviceDetail.excludes.map((item, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <AlertCircle className="mt-0.5 h-4 w-4 text-amber-500 flex-shrink-0" />
                            <span className="text-sm">{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                  
                  <div className="rounded-md border">
                    <div className="border-b p-4">
                      <h3 className="text-base font-medium">„Çµ„Éº„Éì„Çπ„É¨„Éô„É´ÊÉÖÂ†±</h3>
                    </div>
                    <div className="grid grid-cols-1 gap-6 p-4 sm:grid-cols-3">
                      <div>
                        <h4 className="mb-1 text-sm font-medium">ÊâÄË¶ÅÊôÇÈñì</h4>
                        <div className="flex items-center gap-1">
                          <Clock className="h-4 w-4 text-muted-foreground" />
                          <span>{serviceDetail.sla.fulfillment}</span>
                        </div>
                      </div>
                      <div>
                        <h4 className="mb-1 text-sm font-medium">„Çµ„Éº„Éì„ÇπÂèØÁî®ÊÄß</h4>
                        <div className="flex items-center gap-1">
                          <CheckCircle2 className="h-4 w-4 text-green-500" />
                          <span>{serviceDetail.sla.availability}</span>
                        </div>
                      </div>
                      <div>
                        <h4 className="mb-1 text-sm font-medium">„Ç≥„Çπ„Éà</h4>
                        <div className="font-medium">{serviceDetail.cost}</div>
                      </div>
                      <div className="col-span-1 sm:col-span-3">
                        <h4 className="mb-2 text-sm font-medium">„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ</h4>
                        <div className="flex items-center space-x-4">
                          <Progress value={serviceDetail.sla.performance.current} max={100} className="flex-1 h-2" />
                          <div className="flex items-center gap-1 text-sm">
                            <span className="font-medium">{serviceDetail.sla.performance.current}%</span>
                            <span className="text-muted-foreground">/ {serviceDetail.sla.performance.target}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
                <TabsContent value="details" className="space-y-4 pt-4">
                  <div className="grid grid-cols-1 gap-4 md:grid-cols-2">
                    <Card>
                      <CardHeader>
                        <CardTitle className="text-base">„Çµ„Éº„Éì„ÇπÁµ±Ë®à</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="space-y-4">
                          <div className="flex items-center justify-between">
                            <div className="text-sm text-muted-foreground">Á∑è„É™„ÇØ„Ç®„Çπ„ÉàÊï∞</div>
                            <div className="font-medium">{serviceDetail.stats.totalRequests}</div>
                          </div>
                          <div className="flex items-center justify-between">
                            <div className="text-sm text-muted-foreground">Âπ≥ÂùáÊâÄË¶ÅÊôÇÈñì</div>
                            <div className="font-medium">{serviceDetail.stats.averageFulfillmentTime}</div>
                          </div>
                          <div className="flex items-center justify-between">
                            <div className="text-sm text-muted-foreground">Ê∫ÄË∂≥Â∫¶</div>
                            <div className="flex items-center">
                              <span className="font-medium">{serviceDetail.stats.satisfactionRate}%</span>
                              <ThumbsUp className="ml-1 h-4 w-4 text-green-500" />
                            </div>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                    
                    <Card>
                      <CardHeader>
                        <CardTitle className="text-base">Èñ¢ÈÄ£„Çµ„Éº„Éì„Çπ</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="space-y-2">
                          {serviceDetail.relatedServices.map((service, index) => (
                            <div key={index} className="flex items-center justify-between rounded-md border p-2">
                              <div className="font-medium">{service.name}</div>
                              <Button variant="ghost" size="sm">Ë°®Á§∫</Button>
                            </div>
                          ))}
                        </div>
                      </CardContent>
                    </Card>
                  </div>
                  
                  <div>
                    <h3 className="mb-3 text-base font-medium">‰ª£Êõø„Çµ„Éº„Éì„Çπ</h3>
                    <div className="grid grid-cols-1 gap-4 md:grid-cols-2">
                      {serviceDetail.alternatives.map((alt, index) => (
                        <div key={index} className="rounded-md border p-4">
                          <div className="font-medium">{alt.name}</div>
                          <p className="mt-1 text-sm text-muted-foreground">{alt.description}</p>
                          <Button variant="outline" size="sm" className="mt-3">
                            Ë©≥Á¥∞„ÇíË°®Á§∫
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <div>
                    <h3 className="mb-3 text-base font-medium">„Éâ„Ç≠„É•„É°„É≥„Éà</h3>
                    <div className="space-y-2">
                      {serviceDetail.documentation.map((doc, index) => (
                        <div key={index} className="flex items-center justify-between rounded-md border p-3">
                          <div className="flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 text-muted-foreground" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                            </svg>
                            <span>{doc.name}</span>
                          </div>
                          <Button variant="ghost" size="sm">
                            Ë°®Á§∫
                          </Button>
                        </div>
                      ))}
                    </div>
                  </div>
                </TabsContent>
                <TabsContent value="process" className="space-y-4 pt-4">
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-base">Áî≥Ë´ã„Éó„É≠„Çª„Çπ</CardTitle>
                      <CardDescription>„Åì„ÅÆ„Çµ„Éº„Éì„Çπ„Çí„É™„ÇØ„Ç®„Çπ„Éà„Åô„ÇãÊâãÈ†Ü</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ol className="relative space-y-6 border-l border-muted">
                        {serviceDetail.approvalProcess.map((step, index) => (
                          <li key={index} className="ml-6">
                            <span className="absolute -left-3 flex h-6 w-6 items-center justify-center rounded-full bg-primary text-primary-foreground">
                              {index + 1}
                            </span>
                            <div className="flex flex-col space-y-1">
                              <h4 className="text-base font-medium">{step}</h4>
                            </div>
                          </li>
                        ))}
                      </ol>
                    </CardContent>
                  </Card>
                  
                  <Card>
                    <CardHeader>
                      <CardTitle className="text-base">ÂøÖË¶ÅÊÉÖÂ†±</CardTitle>
                      <CardDescription>Áî≥Ë´ãÊôÇ„Å´ÂÖ•Âäõ„ÅåÂøÖË¶Å„Å™ÊÉÖÂ†±</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <ul className="space-y-2">
                        {serviceDetail.requiredInformation.map((info, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <Info className="mt-0.5 h-4 w-4 text-muted-foreground" />
                            <span>{info}</span>
                          </li>
                        ))}
                      </ul>
                    </CardContent>
                  </Card>
                  
                  <div className="flex items-center gap-2 rounded-md bg-muted p-4 text-sm">
                    <HelpCircle className="h-5 w-5 text-muted-foreground" />
                    <span>
                      Áî≥Ë´ã„Å´Èñ¢„Åó„Å¶Ë≥™Âïè„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„ÄÅITÈÉ®ÈñÄÔºàsupport@example.comÔºâ„Åæ„Åß„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ
                    </span>
                  </div>
                </TabsContent>
                <TabsContent value="faq" className="space-y-4 pt-4">
                  <div>
                    <h3 className="mb-3 text-base font-medium">„Çà„Åè„ÅÇ„ÇãË≥™Âïè</h3>
                    <div className="space-y-3">
                      {serviceDetail.faqs.map((faq, index) => (
                        <div key={index} className="rounded-md border p-4">
                          <h4 className="font-medium">{faq.question}</h4>
                          <p className="mt-2 text-sm">{faq.answer}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <div className="rounded-md border p-4">
                    <h3 className="mb-3 font-medium">„Åì„ÅÆ„Éö„Éº„Ç∏„ÅØÂΩπ„Å´Á´ã„Å°„Åæ„Åó„Åü„ÅãÔºü</h3>
                    <div className="space-y-3">
                      <div className="flex gap-2">
                        <Button variant="outline" size="sm" onClick={handleSubmitFeedback}>
                          <ThumbsUp className="mr-1 h-4 w-4" />
                          „ÅØ„ÅÑ„ÄÅÂΩπÁ´ã„Å°„Åæ„Åó„Åü
                        </Button>
                        <Button variant="outline" size="sm" onClick={handleSubmitFeedback}>
                          „ÅÑ„ÅÑ„Åà„ÄÅ„ÇÇ„Å£„Å®ÊÉÖÂ†±„ÅåÊ¨≤„Åó„ÅÑ„Åß„Åô
                        </Button>
                      </div>
                      
                      <div className="flex items-center gap-2 text-sm text-muted-foreground">
                        <span>„Åù„Çå„Åß„ÇÇË≥™Âïè„Åå„ÅÇ„Çä„Åæ„Åô„ÅãÔºü</span>
                        <Button variant="link" size="sm" className="p-0 h-auto">
                          ITÈÉ®ÈñÄ„Å´Âïè„ÅÑÂêà„Çè„Åõ„Çã
                        </Button>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </CardContent>
          </Card>
        </div>
        
        <div className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>„Ç¢„ÇØ„Ç∑„Éß„É≥</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <Button className="w-full" onClick={onRequestService}>
                <Plus className="mr-2 h-4 w-4" />
                „Åì„ÅÆ„Çµ„Éº„Éì„Çπ„Çí„É™„ÇØ„Ç®„Çπ„Éà
              </Button>
              <Button className="w-full" variant="outline" onClick={handleAddToFavorites}>
                <Star className="mr-2 h-4 w-4" />
                „ÅäÊ∞ó„Å´ÂÖ•„Çä„Å´ËøΩÂä†
              </Button>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader>
              <CardTitle>„Çµ„Éº„Éì„ÇπÊÉÖÂ†±</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="rounded-md border p-3">
                <div className="grid grid-cols-2 gap-y-2 text-sm">
                  <div className="text-muted-foreground">„Ç´„ÉÜ„Ç¥„É™</div>
                  <div>{serviceDetail.category}</div>
                  <div className="text-muted-foreground">ÊâÄË¶ÅÊôÇÈñì</div>
                  <div>{serviceDetail.fulfillmentTime}</div>
                  <div className="text-muted-foreground">ÊâøË™ç</div>
                  <div>{serviceDetail.approvalRequired ? "ÂøÖË¶Å" : "‰∏çË¶Å"}</div>
                  <div className="text-muted-foreground">„Ç≥„Çπ„Éà</div>
                  <div>{serviceDetail.cost}</div>
                </div>
              </div>
              
              <div>
                <h3 className="mb-2 text-sm font-medium">„Çø„Ç∞</h3>
                <div className="flex flex-wrap gap-1">
                  {serviceDetail.tags.map((tag, index) => (
                    <Badge key={index} variant="outline">
                      {tag}
                    </Badge>
                  ))}
                </div>
              </div>
              
              <Separator />
              
              <div className="flex items-center gap-2">
                <div className="flex items-center gap-1">
                  <Star className="h-4 w-4 text-amber-500 fill-current" />
                  <span className="font-medium">{serviceDetail.rating}</span>
                </div>
                <div className="text-sm text-muted-foreground">
                  Âà©Áî®ËÄÖË©ï‰æ°
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}

// „Çµ„Éº„Éì„Çπ„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„ÉÉ„Ç∏„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
function ServiceStatusBadge({ status }: { status: string }) {
  let classes = "";
  let label = "";
  
  switch(status) {
    case "available":
      classes = "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200";
      label = "Âà©Áî®ÂèØËÉΩ";
      break;
    case "limited":
      classes = "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200";
      label = "‰∏ÄÈÉ®Âà©Áî®Âà∂Èôê„ÅÇ„Çä";
      break;
    case "unavailable":
      classes = "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200";
      label = "ÁèæÂú®Âà©Áî®‰∏çÂèØ";
      break;
    case "planned":
      classes = "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200";
      label = "Ê∫ñÂÇô‰∏≠";
      break;
    default:
      classes = "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200";
      label = "Âà©Áî®ÂèØËÉΩ";
  }
  
  return (
    <Badge variant="outline" className={classes}>
      {label}
    </Badge>
  );
}